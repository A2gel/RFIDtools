apply plugin: 'com.android.application'
import groovy.swing.SwingBuilder

System.setProperty('java.awt.headless', 'false')

task getReleasePassword {
    if (System.console() == null) {
        def tempKeyPassword = '';
        def tempJksFile = '';
        def tempAlias = '';
        def tempStorePassword = '';
        // 通过swing显示出一个密码框
        new SwingBuilder().edt {
            dialog(modal: true, title: 'KeyStore info', alwaysOnTop: true, resizable: false, locationRelativeTo: null, size: [500, 200], show: true,) {
                vbox() { // Put everything below each other
                    label(text: "alias(keystore):")
                    // 获取输入的别名
                    def input0 = textField()

                    label(text: "path(keystore):")
                    // 获取输入的文件地址
                    def input1 = textField()

                    label(text: "pwd(KeyPassword):")
                    // 获取输入的密码
                    def input2 = passwordField()

                    label(text: "pwd(StorePassword):")
                    // 获取输入的密码
                    def input3 = passwordField()

                    button(defaultButton: true, text: 'OK', actionPerformed: {
                        tempAlias = input0.text;
                        tempJksFile = input1.text;
                        tempKeyPassword = new String(input2.password);
                        tempStorePassword = new String(input3.password);
                        dispose();
                    })
                }
            }
        }
        // 输入别名
        if (tempAlias.size() <= 0) {
            //没有获取到输入的文件，抛出异常
            throw new InvalidUserDataException("You must enter the ketstore alias to proceed.")
        } else {
            System.setProperty("KEYALIAS_GLOBAL", new String(tempAlias))
        }
        // 输入文件地址!
        if (tempJksFile.size() <= 0) {
            //没有获取到输入的文件，抛出异常
            throw new InvalidUserDataException("You must enter the keystore file to proceed.")
        } else {
            System.setProperty("KEYSTORE_GLOBAL", new String(tempJksFile))
        }
        // 输入密码
        if (tempKeyPassword.size() <= 0) {
            //没有获取到输入的密码，抛出异常
            throw new InvalidUserDataException("You must enter the key password to proceed.")
        } else {
            System.setProperty("PASSWORD_GLOBAL", new String(tempKeyPassword))
        }
        // 输入密码
        if (tempStorePassword.size() <= 0) {
            //没有获取到输入的密码，抛出异常
            throw new InvalidUserDataException("You must enter the store password to proceed.")
        } else {
            System.setProperty("STOREKEY_GLOBAK", new String(tempStorePassword))
        }
    }
}

// 这里主要是插入一个任务，用于在gradle assembleRelease任务之前
// 调用我们的动态密码任务
tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn getReleasePassword
    }
}